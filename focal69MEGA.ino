#define MEMSIZE 3952
// i.e. NOT the full 4096

#define SRL Serial

#define Word unsigned int

  Word pc;

// As of this writing, this whole thing is a quick-and-dirty port of this amazing 256-LOC
// PDP-8 / 4K emulator: https://git.jeelabs.org/jcw/embello/src/branch/master/explore/1638-pdp8
// It was written for PC, and I ported it to Arduino - it definitely runs on DUE.
// Beware that the Arduino IDE builtin Serial monitor will not work (will not terminate lines
// correctly), so use some actual terminal emulator - I am using picocom. - To do all this,
// I ran jcw's original program, with the modification that I let it dump its memory right
// after it loaded FOCAL 69. Then, I removed all loading routines and simply placed the
// dump below into the mem-array, to let the machine have FOCAL 69 in memory a priori.
// I have not tested it, but it should be possible, if you program anything, to replace
// this dump with a new FOCAL 69 dump, containing your program. Hence, I modified the
// cleanup-function so that it simply presents such a dump once you press Ctrl-\ - enjoy!
// For instance, you can try this: FOR X=-10,1,10;TYPE X,!
// - Nino, 21st May 2020
Word mem[] = {
0, 2819, 2819, 1411, 4, 11, 64, 3328, 0, 0, 0, 2296, 1615, 0, 3842, 1677, 0, 0, 1287, 0, 
0, 0, 1, 0, 0, 2032, 0, 0, 0, 2296, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 3459, 1028, 3540, 0, 0, 0, 4080, 2032, 748, 1292, 1470, 1462, 1, 141, 0, 5, 0, 140, 135, 
131, 223, 138, 141, 3842, 4032, 174, 4033, 3968, 4080, 127, 15, 191, 4094, 3903, 176, 3936, 3922, 3955, 4093, 
4091, 4087, 63, 128, 2048, 1048, 1133, 3021, 3072, 3200, 1632, 1670, 1632, 1679, 1039, 1287, 337, 885, 319, 348, 
364, 1212, 1346, 716, 465, 1333, 1133, 1301, 194, 1186, 1264, 267, 847, 859, 1053, 484, 448, 1074, 1494, 0, 
0, 0, 0, 0, 0, 0, 2297, 3976, 2942, 607, 1554, 3585, 1600, 1558, 662, 1547, 661, 2409, 602, 1544, 
1586, 602, 1559, 2410, 2407, 59, 316, 2406, 2703, 170, 1680, 2406, 2406, 602, 1551, 1552, 2405, 541, 1547, 2416, 
2417, 2802, 2745, 1046, 2412, 596, 565, 4000, 2422, 560, 1544, 1586, 567, 1800, 2416, 3848, 2405, 2406, 566, 590, 
4000, 2736, 2421, 2414, 2687, 2400, 393, 786, 3880, 2687, 1554, 530, 3585, 2714, 0, 2416, 566, 586, 4008, 2770, 
1566, 2553, 551, 250, 550, 4000, 2422, 551, 2415, 3588, 1591, 2417, 2405, 2417, 2784, 2794, 556, 3654, 556, 3588, 
567, 1591, 2405, 2417, 2422, 2794, 556, 567, 1591, 2405, 2417, 2784, 3848, 2422, 3648, 567, 68, 4000, 3600, 567, 
70, 3888, 2422, 4000, 763, 3600, 3588, 1589, 3010, 2944, 4064, 1024, 1036, 1032, 624, 610, 875, 739, 2560, 2448, 
2592, 2693, 2688, 3840, 1493, 1493, 1493, 0, 3654, 3590, 3590, 2955, 2412, 530, 2402, 2403, 15, 2403, 53, 565, 
4040, 2739, 2413, 3584, 531, 1545, 777, 2419, 2422, 2400, 390, 2404, 53, 786, 3880, 2745, 3585, 1560, 565, 4064, 
2736, 792, 2419, 2745, 792, 1591, 2709, 2413, 2422, 2400, 392, 2404, 53, 2404, 15, 779, 1554, 3006, 393, 0, 
1593, 3616, 2248, 569, 1803, 3616, 2248, 3007, 0, 523, 1547, 523, 3681, 537, 3992, 2422, 3016, 0, 977, 1593, 
3616, 2248, 721, 3585, 1803, 3616, 2248, 2873, 0, 3744, 988, 1545, 1244, 591, 2248, 591, 1593, 777, 1803, 1081, 
2789, 591, 2248, 3036, 0, 3744, 1004, 1260, 1545, 591, 1593, 779, 1801, 1081, 2803, 3052, 1504, 138, 143, 151, 
573, 607, 1493, 565, 392, 396, 3898, 2412, 2413, 2422, 531, 1554, 2405, 566, 590, 4008, 2913, 2408, 766, 2696, 
566, 61, 2402, 2405, 2408, 766, 3848, 2707, 779, 2407, 507, 119, 2422, 2412, 1046, 2413, 2743, 567, 4000, 2411, 
2405, 2409, 566, 590, 4000, 2724, 787, 3880, 2745, 3585, 1560, 565, 4032, 792, 2419, 2747, 792, 1591, 2719, 531, 
2731, 1558, 2913, 565, 4072, 2745, 2409, 2740, 0, 2416, 2408, 1015, 3008, 566, 1216, 642, 4008, 2767, 2417, 3008, 
3848, 3008, 1216, 1216, 3008, 0, 977, 1546, 778, 3912, 2784, 3617, 566, 4000, 2772, 977, 3616, 522, 1580, 3848, 
1233, 1233, 3776, 3025, 0, 68, 3617, 1593, 567, 68, 569, 4008, 1252, 3044, 0, 542, 4000, 2804, 2405, 3054, 
2410, 2407, 3582, 1794, 3054, 541, 392, 396, 211, 198, 201, 196, 199, 195, 193, 212, 204, 197, 215, 205, 
209, 210, 138, 2420, 2463, 1035, 2464, 585, 1562, 549, 3912, 1050, 4072, 1050, 3848, 3063, 2407, 767, 3833, 2405, 
2712, 2405, 2709, 897, 1063, 2400, 771, 2416, 566, 733, 3872, 2422, 536, 2402, 2400, 906, 779, 1560, 2311, 3352, 
0, 2407, 767, 3711, 2422, 536, 2402, 2400, 906, 2407, 767, 3708, 2422, 2403, 1048, 2400, 906, 2403, 1048, 2403, 
15, 2400, 392, 2404, 15, 2404, 1048, 2404, 3896, 779, 1560, 2311, 280, 987, 3352, 1365, 0, 549, 4064, 2913, 
536, 2402, 2403, 3896, 2753, 3907, 3924, 2403, 1285, 2753, 2347, 2402, 566, 734, 4000, 2422, 2400, 906, 2347, 3123, 
3712, 779, 3119, 3848, 2347, 3712, 2910, 545, 545, 523, 272, 387, 396, 642, 643, 3907, 1156, 413, 686, 127, 
883, 3313, 3744, 1582, 1558, 2407, 761, 126, 1070, 2710, 2400, 771, 566, 2402, 685, 2409, 1054, 3585, 2393, 779, 
1590, 2690, 2400, 907, 2392, 2691, 1046, 2405, 2407, 771, 507, 2409, 2715, 2405, 2412, 567, 1578, 2692, 575, 2355, 
3616, 575, 2409, 2405, 2692, 186, 2412, 2413, 2422, 560, 1544, 1586, 567, 1800, 520, 1559, 2356, 1600, 1046, 2405, 
2409, 2407, 62, 697, 2406, 2747, 560, 3585, 1544, 1586, 2410, 2407, 57, 697, 2406, 2758, 0, 3880, 566, 3617, 
1593, 972, 1228, 1546, 778, 3912, 2784, 569, 4000, 2772, 522, 972, 1593, 825, 1593, 2873, 1228, 3776, 3020, 2347, 
3584, 3325, 3290, 2790, 3314, 1574, 3073, 2910, 0, 3110, 3094, 3105, 2799, 3712, 3052, 699, 696, 1504, 706, 697, 
177, 714, 165, 162, 161, 163, 164, 160, 172, 187, 141, 2420, 162, 141, 2422, 1586, 2406, 2405, 2408, 1015, 
2710, 566, 82, 561, 1585, 2405, 2408, 1015, 2710, 2705, 2418, 2719, 561, 1582, 2480, 779, 1585, 2479, 2347, 1743, 
560, 1560, 536, 3617, 537, 4072, 2737, 792, 3617, 561, 4008, 2757, 536, 568, 2721, 1063, 897, 537, 517, 3681, 
523, 3984, 2422, 537, 568, 1561, 561, 1816, 1048, 719, 1816, 1048, 2311, 351, 3352, 0, 2913, 536, 1545, 777, 
3617, 719, 4000, 2732, 1048, 1048, 2913, 0, 566, 588, 4000, 3023, 2405, 2768, 3920, 3911, 0, 1024, 0, 0, 
566, 589, 4000, 1243, 566, 726, 1580, 556, 4040, 3035, 566, 727, 4072, 1243, 3035, 2311, 728, 2280, 3288, 0, 
1752, 1572, 2910, 607, 1554, 779, 1593, 2873, 673, 666, 681, 678, 1578, 683, 683, 392, 396, 0, 556, 2402, 
557, 2402, 558, 2402, 641, 2402, 2405, 1581, 2420, 2711, 2778, 2787, 2400, 775, 2420, 2724, 138, 255, 2422, 607, 
1560, 585, 556, 3880, 2727, 3585, 4008, 2771, 556, 593, 4040, 2803, 2418, 3848, 2422, 556, 1556, 532, 593, 4032, 
1556, 532, 3617, 557, 4040, 2760, 557, 3658, 3594, 729, 1724, 557, 4000, 2404, 36, 2311, 0, 3413, 0, 597, 
1560, 532, 557, 4008, 2913, 779, 1581, 2733, 2418, 3848, 2805, 557, 2402, 536, 1744, 2403, 0, 532, 1581, 2405, 
2420, 2803, 2778, 2787, 2704, 280, 2403, 36, 597, 1560, 1566, 2393, 2404, 36, 2706, 1582, 2405, 2408, 1015, 2796, 
558, 3652, 566, 2787, 2418, 2422, 2177, 779, 2407, 1140, 3207, 2418, 2422, 2177, 1035, 2910, 160, 171, 173, 175, 
170, 222, 168, 219, 188, 169, 221, 190, 172, 187, 141, 189, 2403, 1285, 2404, 36, 665, 4040, 2345, 2311, 
3584, 3224, 0, 597, 1560, 2215, 2967, 914, 0, 0, 0, 0, 3, 0, 556, 593, 4032, 2973, 556, 592, 
4064, 1181, 2973, 0, 779, 1581, 668, 779, 3617, 556, 4000, 2422, 2405, 2983, 0, 3074, 2413, 2994, 1046, 2405, 
566, 590, 4000, 2743, 527, 3616, 531, 1583, 603, 3617, 531, 4008, 2687, 3584, 787, 1813, 603, 1593, 825, 3880, 
2775, 1562, 531, 3681, 538, 3992, 559, 538, 1849, 538, 2761, 3616, 531, 1545, 559, 3616, 531, 1546, 559, 560, 
1584, 520, 3616, 522, 1562, 520, 559, 1544, 778, 1801, 1050, 2792, 2739, 0, 2356, 1590, 2408, 915, 3053, 2409, 
3053, 1371, 1448, 1438, 1397, 1432, 1359, 1402, 1428, 1429, 1452, 1405, 1474, 1433, 1399, 216, 2420, 2719, 2706, 2699, 
566, 586, 3872, 2422, 605, 1584, 1883, 560, 1561, 2687, 2412, 560, 1544, 2421, 1043, 565, 4032, 787, 2419, 2703, 
787, 1591, 2709, 560, 1561, 2913, 0, 603, 1557, 603, 1555, 531, 1545, 567, 3681, 777, 3880, 2742, 3992, 2743, 
531, 1557, 787, 3872, 2726, 3848, 1186, 531, 3585, 1551, 1552, 2978, 0, 2264, 4040, 518, 751, 566, 3880, 2766, 
573, 1590, 534, 576, 4008, 2409, 3004, 2264, 3616, 2750, 534, 4000, 2774, 576, 4008, 3585, 1600, 2749, 584, 2757, 
0, 1040, 2789, 529, 82, 1590, 566, 579, 4008, 2763, 566, 750, 3032, 783, 1553, 3616, 1552, 529, 3658, 3594, 
3594, 2780, 4064, 4001, 0, 3584, 789, 1840, 560, 1813, 561, 3872, 1800, 520, 3585, 1584, 560, 1561, 3056, 683, 
396, 3202, 495, 495, 3240, 1, 1024, 0, 0, 0, 0, 4086, 0, 3097, 2701, 3102, 70, 3880, 2701, 595, 
2956, 0, 567, 2415, 82, 2210, 578, 2409, 567, 2210, 750, 1590, 2409, 2965, 0, 70, 1562, 587, 1563, 2730, 
1051, 1562, 538, 651, 3904, 2728, 3712, 539, 2409, 538, 587, 2409, 2978, 0, 3880, 566, 590, 3880, 2750, 575, 
2355, 2997, 575, 2355, 574, 2748, 0, 584, 3617, 566, 3880, 746, 577, 3880, 3053, 747, 1593, 569, 236, 750, 
3872, 748, 4008, 2778, 569, 82, 3872, 2269, 3584, 3010, 594, 2269, 2772, 0, 1074, 2799, 561, 1800, 1585, 523, 
3681, 517, 520, 3984, 3037, 2422, 32, 255, 96, 1540, 4000, 2415, 1585, 3616, 1586, 3037, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3965, 1664, 3592, 1665, 3105, 2709, 3106, 1550, 949, 3880, 
2709, 3108, 1550, 1973, 693, 3585, 71, 691, 1717, 3097, 2726, 3102, 70, 3880, 2726, 595, 1714, 690, 642, 4008, 
2784, 540, 4000, 2422, 690, 1564, 3081, 2730, 3082, 1567, 3236, 3137, 3584, 641, 3652, 640, 3073, 2816, 0, 1616, 
1616, 1616, 0, 540, 3944, 2743, 1726, 1564, 702, 2998, 0, 1718, 3073, 948, 4000, 2753, 3074, 526, 4000, 2764, 
694, 3110, 1550, 2771, 694, 1972, 692, 3585, 71, 691, 1716, 3073, 3006, 1750, 0, 3744, 726, 1591, 3073, 526, 
4000, 2779, 3074, 2786, 595, 1591, 1038, 581, 1583, 3616, 691, 1544, 3584, 1800, 1071, 2793, 1564, 691, 1717, 691, 
1716, 3616, 3110, 577, 2409, 2411, 1042, 786, 3880, 2815, 1591, 577, 2409, 2409, 2411, 575, 2409, 598, 1642, 2687, 
562, 4000, 2700, 520, 3617, 535, 4032, 2977, 681, 2409, 520, 1593, 3584, 1074, 2722, 825, 82, 579, 4000, 2719, 
3616, 1586, 3616, 520, 1544, 825, 65, 1585, 2977, 1368, 825, 65, 518, 4000, 2712, 1849, 2713, 220, 560, 1560, 
537, 3617, 536, 4008, 2913, 792, 1742, 717, 1551, 1552, 2405, 2409, 2405, 2409, 2405, 2409, 1048, 792, 2508, 2405, 
2409, 1048, 2311, 280, 0, 2392, 575, 2409, 568, 585, 536, 2731, 1314, 1613, 0, 2601, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1679, 0, 237, 399, 193, 812, 3193, 3513, 4045, 1693, 
138, 1312, 2146, 207, 903, 1153, 1301, 769, 1289, 974, 1249, 2146, 4045, 1722, 148, 1312, 2081, 2201, 981, 2056, 
86, 352, 1237, 195, 339, 1222, 1356, 793, 2060, 961, 261, 288, 2502, 963, 76, 2865, 3702, 3687, 2063, 928, 
96, 4045, 1752, 153, 1221, 1312, 1028, 1085, 1028, 1066, 3230, 3185, 3780, 2097, 2994, 3515, 271, 2097, 3001, 3780, 
992, 3259, 2068, 2081, 2192, 1167, 197, 324, 2978, 2145, 3794, 4045, 1772, 154, 582, 2088, 1028, 1069, 3497, 2097, 
2995, 3116, 3182, 3255, 3796, 2082, 1028, 1069, 3631, 802, 3794, 4045, 1781, 155, 1312, 2192, 272, 2929, 3234, 3794, 
4045, 1795, 158, 608, 2576, 272, 2933, 2673, 2996, 3796, 2082, 769, 173, 3618, 4045, 1809, 168, 608, 2576, 272, 
2932, 2673, 2997, 3796, 2082, 777, 899, 2936, 4045, 1827, 178, 1312, 2192, 272, 2914, 3785, 416, 2576, 272, 2931, 
2673, 2998, 3796, 2082, 3631, 610, 4045, 1839, 188, 582, 2088, 1028, 1069, 3241, 3182, 3579, 1312, 2232, 4045, 1852, 
198, 582, 2088, 1028, 1069, 3177, 3182, 3643, 1312, 2232, 3027, 4045, 1863, 208, 582, 2088, 1028, 1065, 3182, 3707, 
1312, 2229, 4045, 1874, 218, 1312, 2208, 207, 848, 1364, 338, 2978, 2145, 4045, 1881, 271, 1221, 1312, 1542, 3953, 
4045, 1894, 276, 1312, 2146, 1224, 76, 800, 608, 1157, 1281, 590, 2082, 4045, 1906, 281, 1312, 2188, 967, 2848, 
344, 1068, 2049, 1294, 2079, 4045, 1921, 286, 271, 2097, 3131, 582, 2088, 1157, 2674, 3001, 2866, 2996, 2866, 2996, 
4045, 1946, 296, 271, 2098, 2994, 3796, 2082, 1225, 901, 2848, 207, 1225, 901, 2079, 2235, 271, 2097, 3131, 582, 
2088, 1157, 2674, 2997, 3794, 4045, 1954, 306, 1248, 1542, 3949, 3195, 2066, 4045, 1960, 346, 1248, 1542, 3952, 4045, 
1979, 1320, 96, 1157, 3785, 2088, 1157, 2928, 1605, 1257, 2097, 3118, 3436, 3184, 2996, 3436, 3184, 2997, 4045, 1988, 
1325, 2067, 340, 2066, 381, 2929, 3794, 4045, 2001, 1330, 582, 2088, 1157, 2928, 911, 2673, 3118, 3500, 3184, 3000, 
4045, 2024, 1340, 1312, 2146, 1036, 321, 1221, 2049, 915, 1477, 1184, 2521, 339, 2528, 978, 2087, 911, 2528, 2235, 
480, 3184, 2996, 4045, 0, 1360, 1221, 1312, 1157, 3953, 3794, 4045, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1505, 760, 1662, 3170, 
3135, 3178, 3570, 3082, 3302, 3578, 3776, 1804, 1071, 2691, 754, 2297, 760, 1536, 3616, 3191, 3712, 3193, 4008, 2710, 
757, 3169, 758, 3169, 3712, 2760, 3169, 15, 2, 3585, 4008, 2758, 3649, 3300, 3289, 4032, 2726, 744, 2026, 745, 
2027, 2759, 3820, 759, 4008, 2741, 3812, 758, 4008, 2762, 576, 2036, 650, 2035, 2763, 1521, 2764, 3110, 3072, 3072, 
3072, 3072, 3072, 3072, 3072, 3072, 1071, 3105, 2742, 559, 600, 4040, 2761, 1304, 1304, 1304, 1304, 1304, 1304, 1304, 
3110, 3073, 2400, 273, 3074, 752, 2297, 3880, 2788, 4040, 758, 592, 1583, 748, 1545, 749, 1801, 1071, 2779, 752, 
2297, 4040, 580, 750, 751, 1565, 3047, 1164, 3275, 3271, 619, 622, 257, 1493, 368, 2447, 1542, 1457, 1028, 3282, 
1452, 7, 2, 2050, 2354, 1252, 1585, 2400, 799, 1048, 792, 3065, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 549, 4040, 2516, 1563, 2311, 2251, 3517, 0, 2347, 1749, 2311, 3584, 
3518, 445, 1470, 3517, 2493, 3518, 712, 3286, 197, 1750, 1469, 703, 3286, 194, 2494, 726, 3286, 445, 1750, 2257, 
718, 0, 725, 548, 1572, 1051, 2910, 2311, 3517, 206, 1981, 0, 2910, 2770, 2774, 4, 1274, 770, 4092, 1135, 
2671, 10, 2860, 227, 7, 1398, 2785, 1, 1477, 1309, 1, 1024, 0, 2, 1024, 0, 2675, 0, 0, 0, 
0, 0, 2311, 445, 2493, 3518, 2300, 761, 2494, 758, 3286, 243, 2494, 752, 2494, 749, 2493, 1750, 0, 3052, 
2580, 0, 1311, 931, 4095, 1732, 2332, 4091, 1734, 2860, 0, 1311, 934, 0, 1303, 1235, 4093, 1815, 3626, 0, 
549, 4040, 2291, 1563, 2311, 3485, 1439, 0, 549, 4040, 2705, 2311, 415, 1949, 3485, 0, 3744, 1778, 2963, 2522, 
1266, 2972, 2311, 3485, 414, 1437, 0, 2972, 2754, 2770, 2766, 2510, 549, 3880, 2422, 4040, 2345, 2311, 3566, 1439, 
0, 549, 3880, 2910, 4032, 2740, 2311, 415, 2030, 3566, 0, 3744, 1563, 517, 1572, 3616, 1006, 1573, 1574, 1575, 
3585, 2030, 2311, 2287, 3485, 494, 1439, 3566, 2283, 744, 2542, 741, 2542, 738, 2542, 735, 2542, 732, 2542, 729, 
2542, 726, 2542, 925, 0, 2972, 0, 2047, 4066, 4095, 2048, 2112, 4095, 1359, 199, 4094, 2123, 3721, 4094, 1373, 
1729, 4093, 2534, 505, 4092, 1182, 2244, 4089, 2404, 989, 2518, 0, 1419, 2316, 0, 0, 2345, 3744, 3059, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 2311, 3282, 206, 1234, 0, 549, 4064, 2701, 549, 4032, 2910, 2345, 
3616, 1563, 2311, 1734, 3286, 0, 2347, 2311, 3584, 3282, 214, 1234, 2246, 3282, 1226, 0, 549, 4040, 2725, 2311, 
3282, 0, 539, 3616, 1563, 2311, 210, 1230, 0, 549, 4040, 2737, 2311, 202, 1234, 3282, 0, 2311, 210, 1742, 
3282, 2258, 3286, 218, 2262, 734, 2262, 738, 2262, 742, 2262, 718, 2258, 0, 1051, 2910, 2345, 2910, 3, 1608, 
2030, 1693, 2, 1608, 2030, 1693, 1, 1608, 2030, 1693, 0, 0, 0, 0, 0, 0, 0, 0, 4084, 1281, 
3597, 546, 4089, 2868, 2892, 3176, 4093, 1305, 2801, 2526, 0, 2773, 268, 1655, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1756, 554, 2415, 
82, 1562, 538, 3617, 3880, 726, 1757, 554, 3880, 2721, 82, 1755, 733, 731, 3912, 2712, 3744, 538, 1755, 3616, 
539, 3904, 3712, 538, 3912, 2739, 726, 3904, 3712, 727, 1593, 985, 569, 1758, 569, 3617, 1593, 725, 1502, 990, 
728, 4040, 2741, 2014, 1081, 2769, 1502, 1051, 3712, 554, 4008, 2798, 733, 539, 3936, 2797, 731, 3904, 3712, 3617, 
539, 3617, 1562, 539, 538, 4008, 2787, 538, 3585, 4040, 581, 2270, 1050, 2755, 578, 2409, 2755, 3616, 734, 1758, 
2730, 5, 4090, 7, 4086, 3176, 3180, 0, 0, 0, 0, 2522, 1245, 3038, 2944, 3616, 539, 1563, 1244, 2795, 
3616, 1756, 2763, 780, 2763, 3712, 2522, 578, 2409, 1152, 780, 2270, 1244, 2802, 3616, 1756, 2803, 0, 549, 1576, 
549, 4040, 2345, 3065, 0, 1574, 1572, 1573, 1575, 1740, 1576, 566, 692, 3880, 2704, 585, 4000, 2705, 3616, 1576, 
2486, 566, 693, 4008, 2704, 2199, 2944, 0, 566, 690, 4008, 2967, 2417, 2967, 2727, 556, 1739, 2231, 1228, 4000, 
2422, 2486, 2712, 566, 586, 4040, 2967, 566, 691, 4064, 2967, 566, 82, 2720, 3899, 3878, 3925, 3936, 494, 0, 
551, 1571, 550, 1570, 549, 1569, 1738, 2253, 2253, 2267, 2253, 715, 1571, 1570, 1569, 2267, 714, 2999, 0, 0, 
0, 0, 551, 3652, 1575, 550, 3588, 1574, 549, 3588, 1573, 714, 3588, 1738, 3021, 0, 3776, 551, 547, 1575, 
3588, 550, 546, 1574, 3588, 549, 545, 1573, 3588, 714, 1738, 3035, 0, 3776, 545, 3912, 3664, 3592, 1569, 546, 
3592, 1570, 547, 3592, 1571, 1056, 3052, 3052, 0, 0, 0, 0, 0, 733, 2409, 549, 4032, 732, 734, 2409, 
2539, 1563, 548, 3912, 2711, 3872, 737, 4072, 2716, 2311, 2532, 0, 3585, 539, 2697, 2311, 2538, 0, 3616, 2709, 
2021, 2022, 744, 1548, 548, 3680, 1772, 739, 1572, 2391, 1260, 2725, 998, 3880, 2744, 738, 4040, 2740, 3585, 1804, 
1060, 738, 1051, 3584, 998, 1051, 3584, 3848, 2535, 1804, 1060, 2744, 744, 1548, 739, 2537, 2944, 731, 2409, 539, 
3912, 3617, 1573, 539, 4032, 585, 734, 2409, 549, 1060, 735, 3904, 2765, 736, 1573, 3616, 548, 3872, 2284, 549, 
2522, 2944, 1314, 197, 4083, 189, 173, 3996, 100, 4092, 4086, 4089, 3261, 3019, 3018, 2999, 3895, 2816, 3257, 2937, 
0, 587, 2409, 3052, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 4000, 2502, 566, 588, 4008, 2690, 2498, 566, 589, 4000, 2705, 2502, 1989, 2499, 965, 3617, 1563, 712, 1572, 
2500, 2503, 2311, 3352, 0, 566, 705, 4000, 2726, 2502, 2498, 2500, 551, 539, 1563, 2311, 280, 0, 539, 3880, 
2944, 4032, 2737, 2311, 2237, 3352, 0, 3585, 2742, 2311, 2233, 3352, 0, 3616, 539, 1563, 2726, 4, 1280, 0, 
0, 4093, 1638, 1639, 1640, 3899, 2944, 2967, 3707, 3020, 494, 3805, 35, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 581, 1763, 543, 4032, 2804, 1050, 2772, 1251, 2772, 2275, 523, 766, 3984, 3042, 1035, 2913, 138, 0, 
765, 3616, 1789, 3680, 1567, 765, 3872, 3084, 4000, 767, 598, 1642, 3043, 2275, 3059, 393, 3616, 1567, 3086, 70, 
3880, 2770, 595, 1590, 3025, 0, 2415, 2148, 0, 3776, 1575, 1571, 896, 3880, 2944, 1714, 690, 83, 4008, 2702, 
580, 128, 1568, 582, 178, 544, 1568, 691, 178, 4008, 2713, 800, 1568, 1152, 3616, 544, 1549, 690, 3654, 3590, 
71, 3880, 2743, 692, 1714, 946, 3880, 2741, 1714, 708, 1548, 591, 1583, 781, 1804, 1071, 2733, 2994, 0, 256, 
3451, 707, 2747, 707, 1549, 3616, 544, 1548, 591, 1583, 780, 1805, 1071, 2750, 2689, 35, 31, 2549, 2552, 2689, 
2554, 2553, 2555, 2551, 2689, 549, 4000, 2773, 1572, 1573, 1574, 1575, 2689, 2403, 36, 2403, 32, 2404, 36, 2347, 
3912, 2786, 3616, 1714, 1571, 549, 4000, 2422, 2403, 1285, 2404, 36, 2404, 3896, 2800, 2403, 3896, 2404, 32, 2550, 
1202, 2795, 2689, 2550, 2689, 3691, 3588, 3805, 3475, 3052, 3567, 3035, 3398, 3397, 3655, 3443, 3405, 0, 3403, 0, 
3776, 551, 3617, 1575, 550, 3616, 3864, 3649, 1574, 549, 3616, 3864, 3649, 1573, 2947, 0, 549, 3880, 550, 4008, 
2761, 545, 3880, 546, 3880, 547, 4008, 2963, 544, 3617, 548, 3880, 2747, 1667, 643, 3904, 3617, 1746, 722, 734, 
4040, 2749, 643, 4032, 2741, 2287, 1234, 2737, 2747, 3616, 544, 1568, 2515, 1234, 2744, 1171, 2963, 544, 4032, 2756, 
548, 4032, 2963, 2758, 548, 4032, 643, 4064, 2963, 544, 1572, 545, 1573, 546, 1574, 547, 1575, 2963, 0, 3052, 
0, 2537, 548, 4072, 2795, 3585, 1571, 744, 1568, 2195, 23, 1063, 2788, 1062, 3848, 1061, 1575, 2538, 550, 3028, 
23, 2937, 3707, 1572, 1573, 1574, 2788, 0, 3776, 549, 3912, 3600, 3592, 1573, 550, 3592, 1574, 551, 3592, 1575, 
1060, 3055, 3055, 223, 255, 138, 253, 4095, 0, 3585, 544, 2260, 4040, 2283, 1729, 1728, 1727, 1726, 549, 2025, 
545, 2538, 2, 546, 2538, 3, 550, 2025, 545, 2538, 3, 546, 2538, 4, 2739, 1724, 547, 2025, 549, 2538, 
4, 550, 2538, 5, 551, 2025, 545, 2538, 4, 546, 2538, 5, 547, 2538, 6, 705, 1573, 704, 1574, 703, 
1575, 2241, 1575, 2948, 0, 0, 0, 0, 0, 0, 1064, 2345, 2535, 1063, 3009, 545, 4008, 2422, 544, 3617, 
3585, 2260, 4032, 2283, 2536, 2241, 3027, 3329, 0, 548, 1572, 596, 37, 545, 4032, 3616, 1576, 549, 3880, 3046, 
4040, 2345, 545, 3880, 3046, 3028, 3408, 3805, 3761, 3758, 3712, 0, 3776, 547, 3617, 1571, 546, 3616, 3864, 3649, 
1570, 545, 3616, 3864, 3649, 1569, 3051, 0, 552, 4040, 2345, 3067, 0, 3880, 2944, 1708, 1707, 687, 1709, 3648, 
684, 3592, 1708, 683, 3856, 2704, 3648, 686, 3592, 1707, 1197, 2696, 684, 3592, 1709, 896, 3617, 682, 1708, 685, 
3648, 940, 1964, 1196, 3588, 683, 940, 1964, 3856, 2944, 1196, 1452, 2944, 2726, 3650, 0, 0, 0, 0, 4084, 
4073, 0, 1664, 1708, 688, 1709, 3848, 2391, 3648, 546, 550, 1710, 3588, 549, 545, 3856, 2756, 1573, 686, 1574, 
3712, 684, 3588, 1708, 640, 3588, 1664, 1197, 2743, 684, 1574, 640, 1573, 2993, 3588, 1757, 1197, 2743, 733, 1573, 
640, 1574, 684, 1575, 2993, 0, 2557, 2294, 549, 3880, 551, 3880, 550, 4008, 2803, 549, 3652, 4040, 2800, 2391, 
3680, 548, 1572, 2791, 2558, 2294, 3037, 1572, 3037, 3567, 0, 549, 3912, 3617, 4040, 2549, 3062, 2937, 3707, 0, 
2311, 3260, 0, 549, 4040, 2422, 548, 3912, 3600, 3592, 1720, 3864, 1208, 3584, 695, 1721, 1722, 1723, 701, 3880, 
702, 4008, 2741, 2311, 188, 1720, 696, 0, 3744, 548, 1572, 548, 3617, 696, 4000, 2737, 549, 3617, 697, 4000, 
2737, 550, 3617, 698, 3904, 3617, 3585, 4032, 2910, 2311, 3256, 0, 2711, 1572, 2910, 1549, 0, 0, 0, 0, 
0, 0, 0, 3907, 0, 0, 0, 603, 2263, 560, 2263, 537, 2263, 541, 2263, 2766, 2405, 2409, 566, 590, 
4000, 2764, 526, 4000, 2770, 3074, 2884, 0, 1562, 538, 3590, 3590, 2280, 2415, 3588, 2280, 3594, 3592, 2280, 2280, 
3712, 575, 2409, 3031, 0, 238, 587, 2409, 538, 3048, 7, 0
};



Word mask(Word w) { return w & 07777; }
Word lmask(Word w) { return w & 017777; }

Word opAddr (int ir) {
    Word a = ir & 0177;
    if (ir & 0200)
        a |= (pc - 1) & 07600;
    if (ir & 0400) {
        if ((a & 07770) == 010)
            mem[a] = mask(mem[a] + 1);
        a = mem[a];
    }
    return a;
}

// This I simply turned into a memory dump, so if anything was
// programmed in FOCAL, it should be retained here and could be
// pasted later on at the top. - Nino
void cleanup () {
    SRL.println();
    SRL.println();
    int cntr;
    int cont;
    int decer = 0;
    for (cntr = 0; cntr < MEMSIZE; cntr++) {
      cont = mem[cntr];
      SRL.print(cont);
      SRL.print(", ");
      decer++;
      if (decer == 12) {
        SRL.print("\r\n");
        decer = 0;
      }
     
    }
    SRL.println();
    SRL.println();

}

void setup() {

  

  // start serial port at 300 bps
  SRL.begin(1200);

    pc = 0200;

    Word sr = 0;

    Word ac = 0, mq = 0;
    int iena = 0;
    for (;;) {
        iena >>= 1; // implements delayed enabling, relies on sign extension

        static char counter; // HACK: every 256 ops, fake interrupt (changed short to char)
        if ((iena & 1) && ++counter == 0) {
            mem[0] = pc;
            pc = 1;
            iena = 0;
        }

        int ir = mem[pc];

        pc = mask(pc + 1);
        switch ((ir >> 9) & 07) {

            case 0: // AND
                ac &= mem[opAddr(ir)] | 010000;
                break;

            case 1: // TAD
                ac = lmask(ac + mem[opAddr(ir)]);
                break;

            case 2: { // ISZ
                Word t = opAddr(ir);
                mem[t] = mask(mem[t] + 1);
                if (mem[t] == 0)
                    pc = mask(pc + 1);
                break;
            }

            case 3: // DCA
                mem[opAddr(ir)] = mask(ac);
                ac &= 010000;
                break;

            case 4: { // JMS
                Word t = opAddr(ir);
                mem[t] = pc;
                pc = mask(t + 1);
                break;
            }

            case 5: // JMP
                pc = opAddr(ir);
                break;

            case 6: // IOT
                switch ((ir >> 3) & 077) {
                    case 00:
                        switch (ir) {
                            case 06001: iena = ~1; break; // delays one cycle
                            case 06002: iena = 0; break;
                            default:    { // SRL.print("IOT "); SRL.print(ir, OCT); SRL.print(" AC="); SRL.println(ac, OCT); 
                                        }
                        }
                        break;
                    case 03: // keyboard
                        if ((ir & 01) && SRL.available()) {
                          pc = mask(pc + 1);}
                        if (ir & 04) { // read byte
                            int b = SRL.read();
                            if (b == 0x1C) { // exit program on ctrl-backslash
                                SRL.print("\r\nQUIT\r\n");
                                cleanup();
                                
                                // return 4;
                                if (ir & 01) // skip if ready
                                    pc = mask(pc + 1);
                                if (ir & 04) { // send byte
                                   SRL.write(ac & 0177); // strip off parity
                                //   fflush(stdout);
                                }
                                if (ir & 02) // clear flag
                                    ac &= 010000;
                               
                            }
                            ac = (ac & 010000) | b;
                        }
                        break;
                    case 04: // teleprinter
                        if (ir & 01) // skip if ready
                            pc = mask(pc + 1);
                        if (ir & 04) { // send byte
                            SRL.write(ac & 0177); // strip off parity
                            // fflush(stdout);
                        }
                        if (ir & 02) // clear flag
                            ac &= 010000;
                        break;
                    default:
                        { // SRL.print("IOT "); SRL.print(ir, OCT); SRL.print(" AC="); SRL.println(ac, OCT); 
                        }
                        break;
                }
                break;

            case 7: // OPR
                if ((ir & 0400) == 0) { // group 1
                    if (ir & 0200) // CLA
                        ac &= 010000;
                    if (ir & 0100) // CLL
                        ac &= 07777;
                    if (ir & 040) // CMA
                        ac ^= 07777;
                    if (ir & 020) // CML
                        ac ^= 010000;
                    if (ir & 01) // IAC
                        ac = lmask(ac + 1);
                    switch (ir & 016) {
                        case 012: // RTR
                            ac = lmask((ac >> 1) | (ac << 12)); // fall through
                        case 010: // RAR
                            ac = lmask((ac >> 1) | (ac << 12));
                            break;
                        case 06: // RTL
                            ac = lmask((ac >> 12) | (ac << 1)); // fall through
                        case 04: // RAL
                            ac = lmask((ac >> 12) | (ac << 1));
                            break;
                        case 02: // BSW
                            ac = (ac & 010000) | ((ac >> 6) & 077)
                                                | ((ac << 6) & 07700);
                            break;
                    }
                } else if ((ir & 01) == 0) { // group 2
                    // SMA, SPA, SZA, SNA, SNL, SZL
                    int s = ((ir & 0100) && (ac & 04000)) ||
                            ((ir & 040) && (ac & 07777) == 0) ||
                            ((ir & 020) && (ac & 010000) != 0) ? 0 : 010;
                    if (s == (ir & 010))
                        pc = mask(pc + 1);
                    if (ir & 0200) // CLA
                        ac &= 010000;
                    if (ir & 04) // OSR
                        ac |= sr;
                    if (ir & 02) { // HLT
                        SRL.print("\r\nHALT "); SRL.println(mask(ac), OCT);
                        // return 0;
                    }
                } else { // group 3
                    Word t = mq;
                    if (ir & 0200) // CLA
                        ac &= 010000;
                    if (ir & 020) { // MQL
                        mq = ac & 07777;
                        ac &= 010000;
                    }
                    if (ir & 0100)
                        ac |= t;
                }
                break;
        }
    }
  

}

void loop() {}
